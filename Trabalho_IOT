#include <PubSubClient.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <WiFi.h>

const char* ssid = "Wokwi-GUEST";
const char* password = "";
const char* mqtt_server = "test.mosquitto.org"; 
const char* mqtt_user = "";
const char* mqtt_password = "";
const char* topic = "tempdht22";

WiFiClient espClient;
PubSubClient client(espClient);

#define DHTPIN 4
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);

unsigned long previousMillis = 0;
const long interval = 2000; // Intervalo de leitura do sensor
const long mqttRetryInterval = 3000; // Intervalo para tentar se reconectar ao broker MQTT (3 segundos)

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Conectando-se a ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("Conectado ao WiFi");
}

void sendMQTTMessage(String message) {
  if (client.connected()) {
    client.publish(topic, message.c_str());
  }
}

void reconnect() {
  static unsigned long previousRetryMillis = 0;

  if (millis() - previousRetryMillis >= mqttRetryInterval) {
    previousRetryMillis = millis();
    Serial.print("Conectando ao MQTT...");
    if (client.connect("ESP32Client", mqtt_user, mqtt_password)) {
      Serial.println("Conectado");
      client.subscribe(topic);
    } else {
      Serial.print("Falha, rc=");
      Serial.print(client.state());
      Serial.println(" Tentando novamente em 3 segundos");
    }
  }
}

void setup() {
  Serial.begin(115200);
  dht.begin();
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    if (!client.connected()) {
      reconnect();
    }
    client.loop();

    float temperatura = dht.readTemperature();

    if (temperatura >= 0 && temperatura <= 20) {
      sendMQTTMessage("Temperatura normal");
    } else if (temperatura >= 21 && temperatura <= 30) {
      sendMQTTMessage("Sobretemperatura");
    } else if (temperatura > 30 && temperatura < 32) {
      sendMQTTMessage("Superaquecimento");
    }

    if (temperatura > 32) {
      String msg = "Superando 32 graus!"; 
      Serial.println("Enviando mensagem: " + msg);
      sendMQTTMessage(msg);
    }
  }
}
